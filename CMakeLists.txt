# Configures dependencies, platform specifics and output paths

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(MyProject)

# Use this snippet *after* PROJECT(xxx) to allow for customizable install paths
IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    SET(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR} CACHE PATH "Nothing else chosenas install dir, choosing current dir."  FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

# Use this to have CMake automatically add necessary shared libraries to the runtime path of your binaries
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)


SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)


SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

FIND_PACKAGE(LOG4CXX REQUIRED)
SET(DOCTEST_DIR "${CMAKE_SOURCE_DIR}/dependencies/doctest/")
SET(DOCTEST_FILE "${DOCTEST_DIR}/doctest.h")
SET(CONFIG4CPP_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/dependencies/config4cpp/include/")
SET(OPTPARSE_DIR "${CMAKE_SOURCE_DIR}/dependencies/optparse")
SET(OPTPARSE_FILE "${OPTPARSE_DIR}/optparse.h")

INCLUDE_DIRECTORIES(
    ${LOG4CXX_INCLUDE_DIR}
    ${DOCTEST_DIR}
    ${CONFIG4CPP_INCLUDE_DIR}
    ${OPTPARSE_DIR}
)

SET(G++_COMPILE_FLAGS "-std=c++14 -Wall")
SET(G++_LINKER_FLAGS "-L${LOG4CXX_LIBRARIES} -llog4cxx")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${G++_COMPILE_FLAGS}")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${G++_LINKER_FLAGS}")



ADD_SUBDIRECTORY(dependencies)
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(test)


